{
    "version": 3,
    "sources": [
        "../../../app/service/restful.js"
    ],
    "names": [
        "Service",
        "require",
        "EventEmitter",
        "RestfulService",
        "ctx",
        "Object",
        "assign",
        "prototype",
        "entity",
        "queryObj",
        "count",
        "result",
        "_invoke",
        "recursionLevel",
        "lastinvokeName",
        "name",
        "invokeName",
        "replace",
        "w",
        "p1",
        "url",
        "parseByqueryMap",
        "method",
        "toUpperCase",
        "data",
        "body",
        "JSON",
        "parse",
        "head",
        "logger",
        "info",
        "invokeResult",
        "app",
        "curl",
        "headers",
        "dataType",
        "timeout",
        "error",
        "parseFun",
        "fn",
        "evil",
        "s",
        "status",
        "e",
        "next",
        "map",
        "invokeEntitys",
        "nextEntitys",
        "filter",
        "flag",
        "split",
        "forEach",
        "i",
        "d",
        "id",
        "netxEn",
        "currentCount",
        "promises",
        "currentQurtyObj",
        "queryParams",
        "r",
        "p",
        "Promise",
        "all",
        "str",
        "queryMap",
        "p2",
        "queryStr",
        "params",
        "push",
        "p3",
        "Fun",
        "Function",
        "module",
        "exports"
    ],
    "mappings": "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",
    "file": "restful.js",
    "sourcesContent": [
        "const Service=require('egg').Service;\nconst EventEmitter = require('events').EventEmitter;\n\nclass RestfulService extends Service{\n\n    constructor(ctx){\n        super(ctx);\n        Object.assign(this,EventEmitter.prototype);\n    }\n\n    async invoke(entity,queryObj){\n        let count=1,\n            result={};\n        await this._invoke(entity,queryObj,count,result);\n        return result;\n    }\n\n    async invoke(entity,queryObj){\n        let count=1,\n            recursionLevel=1,\n            lastinvokeName=entity.name,\n            result={};\n\n        await this._invoke(entity,queryObj,count,result,recursionLevel,lastinvokeName);\n        return result;\n    }\n\n    async _invoke(entity,queryObj,count, result,recursionLevel,lastinvokeName){\n        let invokeName='';\n        (lastinvokeName+'-'+count).replace(/(?=\\S+)((?:-\\d+)+)/,(w,p1)=>{\n            invokeName=entity.name+p1;\n            return entity.name+p1;\n        });\n        result[invokeName]={};\n        let url=this.parseByqueryMap(entity.url,queryObj);\n        let method=entity.method.toUpperCase();\n        let data=this.parseByqueryMap(entity.body,queryObj);\n        data=JSON.parse(data);\n        let head=this.parseByqueryMap(entity.head,queryObj);\n        head=JSON.parse(head);\n        this.ctx.logger.info('url:',url);\n        //this.ctx.logger.info('method:',method);\n        //this.ctx.logger.info('head:',head);\n        //this.ctx.logger.info('body:',data);\n\n\n        let invokeResult;\n        try{\n            invokeResult=await this.app.curl(url,{\n                method:method,\n                data:data,\n                headers:head,\n                dataType: 'json',\n                timeout:20000\n            });\n        }catch (e){\n            this.ctx.logger.error('调用接口错误!!',url);\n            //this.ctx.logger.info(invokeResult);\n            this.ctx.logger.info(e);\n            throw e;\n\n        }\n        //this.ctx.logger.info('status',invokeResult.status);\n        //this.ctx.logger.info('result',invokeResult.data);\n        if(entity.parseFun){\n            try {\n                let fn=evil(entity.parseFun);\n                let s=fn(invokeResult.data,invokeResult.headers,invokeResult.status,head,data,url);\n                //response,responsehead,responsestatus,requesthead,requestdata,url\n                result[invokeName].result=s;\n            }catch (e){\n                this.ctx.logger.error('运行解析函数错误');\n                this.ctx.logger.info('response,responsehead,responsestatus,requesthead,requestdata,url');\n                this.ctx.logger.info('解析参数\\n','----->\\n',invokeResult.data,'\\n',invokeResult.headers,'\\n',invokeResult.status,'\\n',head,'\\n',data,'\\n',url,'<------\\n');\n                this.ctx.logger.info('解析析函',entity.parseFun);\n                result[invokeName].result=invokeResult.data;\n            }\n        }else{\n            result[invokeName].result=invokeResult.data;\n        }\n\n        result[invokeName].body=data;\n        result[invokeName].head=head;\n        result[invokeName].url=url;\n        if(entity.next && result[invokeName].result.map ){\n            recursionLevel++;\n            const invokeEntitys=this.app.invokeEntitys;\n            let nextEntitys=//await this.app.mysql.select('invoke_info',{where: {  id: entity.next.split(',') }});\n                invokeEntitys.filter(d=>{\n                    let flag=false;\n                    entity.next.split(',').forEach(i=>{\n                        if(i===d.id+''){\n                            flag=true;\n                        }\n                    });\n                    return flag;\n                });\n\n            for(let netxEn of nextEntitys){\n                let currentCount=count;\n                let promises=result[invokeName].result.map(r=> {\n                    currentCount++;\n                    let currentQurtyObj = {};\n                    Object.assign(currentQurtyObj, queryObj);\n                    let queryParams = this.queryParams(netxEn);\n                    queryParams.forEach(p => {\n                        if (r[p]) {\n                            currentQurtyObj[p] = r[p];\n                        }\n                    });\n                    return this._invoke(netxEn, currentQurtyObj, currentCount, result,recursionLevel,invokeName);\n\n                });\n                await Promise.all(promises);\n            }\n        }\n    }\n\n    parseByqueryMap(str,queryMap){\n        return str.replace(/(@(\\w+))/g,(w,p1,p2)=>{\n            return queryMap[p2]?queryMap[p2]:p1;\n        });\n    };\n\n    queryParams(entity){\n        let queryStr=''+entity.url+entity.head+entity.body;\n        let params=[];\n        queryStr.replace(/@(\\w+)/g,(w,p1)=>{\n            params.push(p1);\n        });\n        return params;\n    }\n\n\n\n}\n\nfunction evil(fn) {\n    fn.replace(/(\\s?function\\s?)(\\w?)(\\s?\\(w+\\)[\\s|\\S]*)/g,function(w,p1,p2,p3){\n        return p1+p3;\n    });\n    let Fun = Function;\n    return new Fun('return ' + fn)();\n}\n\nmodule.exports = RestfulService;"
    ]
}