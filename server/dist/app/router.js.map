{"version":3,"sources":["../../app/router.js"],"names":["module","exports","router","app","controller","get","home","index","restful","toPage","post","infos","invokes","test","save","delete","invoke","checkUnique","groupName","mock","openstack_token","servicesList","instance","measures"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,GAAiB,eAAO;AAAA,QACZC,MADY,GACWC,GADX,CACZD,MADY;AAAA,QACJE,UADI,GACWD,GADX,CACJC,UADI;;AAEpBF,WAAOG,GAAP,CAAW,QAAX,EAAqBD,WAAWE,IAAX,CAAgBC,KAArC;;AAIA;AACAL,WAAOG,GAAP,CAAW,mBAAX,EAA+BD,WAAWI,OAAX,CAAmBC,MAAlD;AACAP,WAAOQ,IAAP,CAAY,mBAAZ,EAAgCN,WAAWI,OAAX,CAAmBG,KAAnD;AACAT,WAAOQ,IAAP,CAAY,qBAAZ,EAAkCN,WAAWI,OAAX,CAAmBI,OAArD;AACAV,WAAOQ,IAAP,CAAY,kBAAZ,EAA+BN,WAAWI,OAAX,CAAmBK,IAAlD;AACAX,WAAOQ,IAAP,CAAY,kBAAZ,EAA+BN,WAAWI,OAAX,CAAmBM,IAAlD;AACAZ,WAAOa,MAAP,CAAc,wBAAd,EAAuCX,WAAWI,OAAX,CAAmBO,MAA1D;;AAEAb,WAAOQ,IAAP,CAAY,qBAAZ,EAAkCN,WAAWI,OAAX,CAAmBQ,MAArD;;AAEAd,WAAOG,GAAP,CAAW,qCAAX,EAAiDD,WAAWI,OAAX,CAAmBS,WAApE;AACAf,WAAOG,GAAP,CAAW,uBAAX,EAAmCD,WAAWI,OAAX,CAAmBU,SAAtD;;AAEA;AACAhB,WAAOQ,IAAP,CAAY,iBAAZ,EAA8BN,WAAWe,IAAX,CAAgBC,eAA9C;AACAlB,WAAOG,GAAP,CAAW,eAAX,EAA2BD,WAAWe,IAAX,CAAgBE,YAA3C;AACAnB,WAAOG,GAAP,CAAW,mCAAX,EAA+CD,WAAWe,IAAX,CAAgBG,QAA/D;AACApB,WAAOG,GAAP,CAAW,iCAAX,EAA6CD,WAAWe,IAAX,CAAgBI,QAA7D;AAIH,CA3BD","file":"router.js","sourcesContent":["'use strict';\n\nmodule.exports = app => {\n    const { router, controller } = app;\n    router.get('/index', controller.home.index);\n\n\n\n    //接口调用\n    router.get('/invokeEntityInfo',controller.restful.toPage);\n    router.post('/invokeInfo/infos',controller.restful.infos);\n    router.post('/invokeInfo/invokes',controller.restful.invokes);\n    router.post('/invokeInfo/test',controller.restful.test);\n    router.post('/invokeInfo/save',controller.restful.save);\n    router.delete('/invokeInfo/delete/:id',controller.restful.delete);\n\n    router.post('/invoke/:invokeName',controller.restful.invoke);\n\n    router.get('/invokeInfo/checkUnique/:invokeName',controller.restful.checkUnique);\n    router.get('/invokeInfo/groupName',controller.restful.groupName);\n\n    //mock\n    router.post('/v3/auth/tokens',controller.mock.openstack_token);\n    router.get('/v2.1/servers',controller.mock.servicesList);\n    router.get('/v1/resource/instance/:instanceId',controller.mock.instance);\n    router.get('/v1/metric/:propertyId/measures',controller.mock.measures);\n\n\n\n};\n"]}